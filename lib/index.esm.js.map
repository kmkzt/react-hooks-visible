{"version":3,"file":"index.esm.js","sources":["../node_modules/@babel/runtime/helpers/esm/extends.js","../src/useVisible.tsx"],"sourcesContent":["export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import React, {\n  useRef,\n  useEffect,\n  useCallback,\n  MutableRefObject,\n  useState\n} from 'react'\n\nconst defaultIntersectionObserverInit: IntersectionObserverInit = {\n  root: null,\n  rootMargin: '0px',\n  threshold: Array.from({ length: 100 }, (v: undefined, i: number) => i * 0.01)\n}\nexport const useVisible = <T extends Element, V = number>(\n  cb?: (vi: number) => V,\n  option: Partial<IntersectionObserverInit> = {}\n): [MutableRefObject<T | null>, V] => {\n  const targetRef = useRef<T | null>(null)\n  const observerRef = useRef<IntersectionObserver | null>(null)\n  const [visible, setVisible] = useState<number>(0)\n  // TODO: visible types refactor\n  const status: V = typeof cb === 'function' ? cb(visible) : (visible as any)\n  const observerCallback: IntersectionObserverCallback = useCallback(\n    (entries: IntersectionObserverEntry[]) => {\n      entries.forEach((entry: IntersectionObserverEntry) => {\n        setVisible(entry.intersectionRatio)\n      })\n    },\n    []\n  )\n\n  useEffect(() => {\n    if (observerRef.current) return\n    if (!targetRef.current) return\n    observerRef.current = new IntersectionObserver(observerCallback, {\n      ...defaultIntersectionObserverInit,\n      ...option\n    })\n    observerRef.current.observe(targetRef.current)\n  })\n\n  return [targetRef, status]\n}\n"],"names":["defaultIntersectionObserverInit","root","rootMargin","threshold","Array","from","length","v","i","useVisible","cb","option","targetRef","useRef","observerRef","visible","setVisible","useState","status","observerCallback","useCallback","entries","forEach","entry","intersectionRatio","useEffect","current","IntersectionObserver","observe"],"mappings":";;AAAe,SAAS,QAAQ,GAAG;AACnC,EAAE,QAAQ,GAAG,MAAM,CAAC,MAAM,IAAI,UAAU,MAAM,EAAE;AAChD,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC/C,MAAM,IAAI,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAChC;AACA,MAAM,KAAK,IAAI,GAAG,IAAI,MAAM,EAAE;AAC9B,QAAQ,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE;AAC/D,UAAU,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AACpC,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA,IAAI,OAAO,MAAM,CAAC;AAClB,GAAG,CAAC;AACJ;AACA,EAAE,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AACzC;;ACRA,MAAMA,+BAAyD,GAAG;AAChEC,EAAAA,IAAI,EAAE,IAD0D;AAEhEC,EAAAA,UAAU,EAAE,KAFoD;AAGhEC,EAAAA,SAAS,EAAEC,KAAK,CAACC,IAAN,CAAW;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAX,EAA4B,CAACC,CAAD,EAAeC,CAAf,KAA6BA,CAAC,GAAG,IAA7D;AAHqD,CAAlE;AAKA,MAAaC,UAAU,GAAG,CACxBC,EADwB,EAExBC,MAAyC,GAAG,EAFpB,KAGY;AACpC,QAAMC,SAAS,GAAGC,MAAM,CAAW,IAAX,CAAxB;AACA,QAAMC,WAAW,GAAGD,MAAM,CAA8B,IAA9B,CAA1B;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAS,CAAT,CAAtC,CAHoC;;AAKpC,QAAMC,MAAS,GAAG,OAAOR,EAAP,KAAc,UAAd,GAA2BA,EAAE,CAACK,OAAD,CAA7B,GAA0CA,OAA5D;AACA,QAAMI,gBAA8C,GAAGC,WAAW,CAC/DC,OAAD,IAA0C;AACxCA,IAAAA,OAAO,CAACC,OAAR,CAAiBC,KAAD,IAAsC;AACpDP,MAAAA,UAAU,CAACO,KAAK,CAACC,iBAAP,CAAV;AACD,KAFD;AAGD,GAL+D,EAMhE,EANgE,CAAlE;AASAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIX,WAAW,CAACY,OAAhB,EAAyB;AACzB,QAAI,CAACd,SAAS,CAACc,OAAf,EAAwB;AACxBZ,IAAAA,WAAW,CAACY,OAAZ,GAAsB,IAAIC,oBAAJ,CAAyBR,gBAAzB,eACjBnB,+BADiB,MAEjBW,MAFiB,EAAtB;AAIAG,IAAAA,WAAW,CAACY,OAAZ,CAAoBE,OAApB,CAA4BhB,SAAS,CAACc,OAAtC;AACD,GARQ,CAAT;AAUA,SAAO,CAACd,SAAD,EAAYM,MAAZ,CAAP;AACD,CA7BM;;;;"}